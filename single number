var singleNumber = function(nums) {
    var result = 0;
    for(var i = 0; i < nums.length; i++){
        result = result ^ nums[i];      //using XOR solution
    }
    
    return result
};

Another solution:
var singleNumber = function(nums){
fums= nums.slice(0);

for(i=0;i<nums.length;i++){
   
    fums.splice(i,1);
       
if(fums.indexOf(nums[i])==-1){
        
    return nums[i];    
    }
    fums=nums.slice(0);    
  }
}

/*Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1
Example 2:

Input: [4,1,2,1,2]
Output: 4
*/
